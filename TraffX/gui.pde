/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void numberLanesChanged(GSlider source, GEvent event) { //_CODE_:numberLanes:621659:
  numLanes = source.getValueI(); 
  addLanes(numLanes, false);
} //_CODE_:numberLanes:621659:

public void textfield1_change1(GTextField source, GEvent event) { //_CODE_:textfield1:372056:
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:textfield1:372056:

public void textfield2_change1(GTextField source, GEvent event) { //_CODE_:textfield2:326021:
  println("textfield2 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:textfield2:326021:

public void speedSliderChanged(GSlider source, GEvent event) { //_CODE_:speedSlider:774121:
  speedLim = source.getValueF();
  for(int i = allCars.size()-1; i >= 0; i--){
    Car car = allCars.get(i);
    car.comfSpeed = speedLim*car.anger;
  }
  //println(speedLim);
} //_CODE_:speedSlider:774121:

public void roadEditingButtonChanged(GButton source, GEvent event) { //_CODE_:roadEditingButton:818730:
  adjusting = false;
  makingRoad = false;
  roadEditingButton.setText("Editing Completed");
  makingRoadText.setText("Not Making Road");
} //_CODE_:roadEditingButton:818730:

public void SpawnChanged(GSlider source, GEvent event) { //_CODE_:spawn:527262:
  carSpawnDelay = 60 - source.getValueI();
} //_CODE_:spawn:527262:

public void angerslid(GSlider source, GEvent event) { //_CODE_:angry:274764:
  maxAnger = source.getValueI();
} //_CODE_:angry:274764:

public void resetClicked(GButton source, GEvent event) { //_CODE_:button1:545382:
  reset();
} //_CODE_:button1:545382:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  numberLanes = new GSlider(this, 25, 19, 100, 62, 10.0);
  numberLanes.setShowLimits(true);
  numberLanes.setLimits(1, 1, 5);
  numberLanes.setNbrTicks(5);
  numberLanes.setStickToTicks(true);
  numberLanes.setNumberFormat(G4P.INTEGER, 0);
  numberLanes.setLocalColorScheme(GCScheme.RED_SCHEME);
  numberLanes.setOpaque(false);
  numberLanes.addEventHandler(this, "numberLanesChanged");
  textfield1 = new GTextField(this, 165, -171, 120, 30, G4P.SCROLLBARS_NONE);
  textfield1.setOpaque(true);
  textfield1.addEventHandler(this, "textfield1_change1");
  makingRoadText = new GLabel(this, 638, 26, 100, 30);
  makingRoadText.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  makingRoadText.setText("Not Making Road");
  makingRoadText.setLocalColorScheme(GCScheme.RED_SCHEME);
  makingRoadText.setOpaque(false);
  textfield2 = new GTextField(this, 206, -178, 120, 30, G4P.SCROLLBARS_NONE);
  textfield2.setOpaque(true);
  textfield2.addEventHandler(this, "textfield2_change1");
  label3 = new GLabel(this, 637, 58, 100, 80);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Press any key to start/stop creating roads when you click");
  label3.setLocalColorScheme(GCScheme.RED_SCHEME);
  label3.setOpaque(false);
  speedSlider = new GSlider(this, 163, 19, 100, 64, 10.0);
  speedSlider.setShowValue(true);
  speedSlider.setShowLimits(true);
  speedSlider.setLimits(60, 60, 120);
  speedSlider.setShowTicks(true);
  speedSlider.setNumberFormat(G4P.INTEGER, 0);
  speedSlider.setLocalColorScheme(GCScheme.RED_SCHEME);
  speedSlider.setOpaque(false);
  speedSlider.addEventHandler(this, "speedSliderChanged");
  roadEditingButton = new GButton(this, 752, 27, 100, 30);
  roadEditingButton.setText("Stop Editing Road");
  roadEditingButton.setLocalColorScheme(GCScheme.RED_SCHEME);
  roadEditingButton.addEventHandler(this, "roadEditingButtonChanged");
  label4 = new GLabel(this, 751, 58, 100, 80);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Do all of your road editing and then press this button to start the simulation");
  label4.setLocalColorScheme(GCScheme.RED_SCHEME);
  label4.setOpaque(false);
  label5 = new GLabel(this, 162, 83, 100, 20);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Speed Limit (kph)");
  label5.setLocalColorScheme(GCScheme.RED_SCHEME);
  label5.setOpaque(false);
  label6 = new GLabel(this, 24, 83, 100, 20);
  label6.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label6.setText("Number of Lanes");
  label6.setLocalColorScheme(GCScheme.RED_SCHEME);
  label6.setOpaque(false);
  spawn = new GSlider(this, 317, 30, 100, 40, 10.0);
  spawn.setLimits(30, 10, 50);
  spawn.setNumberFormat(G4P.INTEGER, 0);
  spawn.setLocalColorScheme(GCScheme.RED_SCHEME);
  spawn.setOpaque(false);
  spawn.addEventHandler(this, "SpawnChanged");
  angry = new GSlider(this, 489, 30, 100, 40, 10.0);
  angry.setShowValue(true);
  angry.setLimits(5, 1, 10);
  angry.setNumberFormat(G4P.INTEGER, 0);
  angry.setLocalColorScheme(GCScheme.RED_SCHEME);
  angry.setOpaque(false);
  angry.addEventHandler(this, "angerslid");
  label7 = new GLabel(this, 489, 83, 100, 20);
  label7.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label7.setText("Aggression Level");
  label7.setLocalColorScheme(GCScheme.RED_SCHEME);
  label7.setOpaque(false);
  label8 = new GLabel(this, 317, 83, 100, 20);
  label8.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label8.setText("Car Spawn Rate");
  label8.setLocalColorScheme(GCScheme.RED_SCHEME);
  label8.setOpaque(false);
  label11 = new GLabel(this, 282, 38, 35, 22);
  label11.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label11.setText("low");
  label11.setLocalColorScheme(GCScheme.RED_SCHEME);
  label11.setOpaque(false);
  label12 = new GLabel(this, 418, 39, 33, 20);
  label12.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label12.setText("high");
  label12.setLocalColorScheme(GCScheme.RED_SCHEME);
  label12.setOpaque(false);
  label13 = new GLabel(this, 591, 39, 25, 21);
  label13.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label13.setText("10");
  label13.setLocalColorScheme(GCScheme.RED_SCHEME);
  label13.setOpaque(false);
  label14 = new GLabel(this, 466, 39, 20, 21);
  label14.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label14.setText("1");
  label14.setLocalColorScheme(GCScheme.RED_SCHEME);
  label14.setOpaque(false);
  button1 = new GButton(this, 890, 40, 80, 30);
  button1.setText("Reset Simulation");
  button1.setLocalColorScheme(GCScheme.RED_SCHEME);
  button1.addEventHandler(this, "resetClicked");
}

// Variable declarations 
// autogenerated do not edit
GSlider numberLanes; 
GTextField textfield1; 
GLabel makingRoadText; 
GTextField textfield2; 
GLabel label3; 
GSlider speedSlider; 
GButton roadEditingButton; 
GLabel label4; 
GLabel label5; 
GLabel label6; 
GSlider spawn; 
GSlider angry; 
GLabel label7; 
GLabel label8; 
GLabel label11; 
GLabel label12; 
GLabel label13; 
GLabel label14; 
GButton button1; 
